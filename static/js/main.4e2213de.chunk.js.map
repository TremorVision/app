{"version":3,"sources":["assets/img/janae.png","assets/img/brandonhong.jpeg","assets/img/janaechan.png","assets/img/robert.jpg","components/sidebar.js","components/donutChart.js","components/modal.js","components/navbar.js","pages/dashboard.js","pages/about.js","App.js","index.js","assets/img/geruh.jpeg","components/charts.js"],"names":["module","exports","Sidebar","props","state","collapseOpen","toggleCollapse","setState","closeCollapse","createLinks","routes","map","prop","key","NavItem","NavLink","to","layout","path","tag","NavLinkRRD","onClick","activeClassName","className","icon","name","activeRoute","bind","routeName","this","location","pathname","indexOf","logo","innerLink","Link","outterLink","href","target","Navbar","expand","id","Container","fluid","type","NavbarBrand","Collapse","navbar","isOpen","Row","Col","xs","Nav","React","Component","originalDoughnutDraw","Chart","controllers","doughnut","prototype","draw","helpers","extend","apply","arguments","height","fontSize","chart","width","toFixed","ctx","font","textBaseline","sum","i","config","data","datasets","length","text","Math","round","toString","textX","measureText","textY","fillStyle","fillText","options","legend","display","position","tooltips","mode","DonutWithText","ModalTest","intructions","modal","results","resultText","percent","toggle","dataURL","parts","contentType","raw","split","decodeURIComponent","Blob","rawLength","window","atob","uInt8Array","Uint8Array","charCodeAt","img","parkisonsPercentage","healthyPercentage","percentage","relation","predictions","tagName","toLowerCase","probability","spiralRes","btn","document","getElementById","addEventListener","e","preventDefault","imgBlob","makeblob","fetch","headers","method","body","then","response","json","populateResult","catch","error","console","log","property","innerHTML","style","backgroundColor","borderColor","callback","updateDataCallback","JSON","parse","classList","add","setTimeout","remove","pingPlatform","content","ModalBody","alt","src","ModalFooter","Button","color","clearModal","download","moment","format","finishTest","lazyRadius","brushRadius","brushColor","hideGrid","hideInterface","canvasHeight","canvasWidth","ref","CanvasReact","saveableCanvas","clear","isCanvasBlank","getSaveData","canvasContainer","children","toDataURL","size","buttonLabel","Modal","ModalHeader","Navigation","UncontrolledDropdown","nav","DropdownToggle","Media","require","DropdownMenu","right","DropdownItem","header","divider","defaultData","labels","Dashboard","toggleNavs","index","activeNav","chartExample1Data","getCurrentWeek","currentDate","weekStart","clone","startOf","days","day","substring","dayNumber","col","push","getTasks","tasks","row","Card","sm","CardTitle","CardText","class","Alert","spiralTestFinished","isFinished","toDoMessage","updateData","result","newPercent","newResult","pow","parseOptions","chartOptions","xl","CardHeader","Progress","max","value","barClassName","CardBody","subtract","pills","classnames","active","data-toggle","chartExample1","getDatasetAtEvent","About","CardImg","top","App","exact","component","from","ReactDOM","render","elements","Rectangle","left","bottom","signX","signY","borderSkipped","_chart","vm","_view","borderWidth","horizontal","base","x","y","barSize","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","strokeStyle","lineWidth","corners","startCorner","cornerAt","corner","moveTo","nextCornerId","radius","lineTo","quadraticCurveTo","fill","stroke","fonts","colors","100","200","300","400","500","600","700","800","900","default","primary","secondary","info","success","danger","warning","scales","yAxes","gridLines","zeroLineColor","ticks","callbacks","label","item","datasetIndex","yLabel","data1","canvas","data2","defaults","global","responsive","maintainAspectRatio","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","padding","usePointStyle","point","line","tension","borderCapStyle","rectangle","arc","enabled","intersect","cutoutPercentage","legendCallback","forEach","bgColor","scaleService","updateScaleDefaults","borderDash","borderDashOffset","drawBorder","drawTicks","zeroLineWidth","zeroLineBorderDash","zeroLineBorderDashOffset","beginAtZero","drawOnChartArea","parent","chartExample2","maxBarThickness"],"mappings":"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","file":"static/js/main.4e2213de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/janae.196d2724.png\";","module.exports = __webpack_public_path__ + \"static/media/brandonhong.22d0b90d.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/janaechan.1eafc3ac.png\";","module.exports = __webpack_public_path__ + \"static/media/robert.efd8082b.jpg\";","import React from \"react\";\nimport { NavLink as NavLinkRRD, Link } from \"react-router-dom\";\nimport { PropTypes } from \"prop-types\";\n\n// reactstrap components\nimport {\n  Collapse,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Media,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass Sidebar extends React.Component {\n  state = {\n    collapseOpen: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n\n\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n\n\n  // toggles collapse between opened and closed (true/false)\n  toggleCollapse = () => {\n    this.setState({\n      collapseOpen: !this.state.collapseOpen\n    });\n  };\n\n\n  // closes the collapse\n  closeCollapse = () => {\n    this.setState({\n      collapseOpen: false\n    });\n  };\n\n\n  // creates the links that appear in the left menu / Sidebar\n  createLinks = routes => {\n    return routes.map((prop, key) => {\n      return (\n        <NavItem key={key}>\n          <NavLink\n            to={prop.layout + prop.path}\n            tag={NavLinkRRD}\n            onClick={this.closeCollapse}\n            activeClassName=\"active\"\n          >\n            <i className={prop.icon} />\n            {prop.name}\n          </NavLink>\n        </NavItem>\n      );\n    });\n  };\n\n  render() {\n    const { logo } = this.props;\n    let navbarBrandProps;\n\n    if (logo && logo.innerLink) {\n      navbarBrandProps = {\n        to: logo.innerLink,\n        tag: Link\n      };\n    } else if (logo && logo.outterLink) {\n      navbarBrandProps = {\n        href: logo.outterLink,\n        target: \"_blank\"\n      };\n    }\n\n    return (\n      <Navbar\n        className=\"navbar-vertical fixed-left navbar-light bg-white sidebar\"\n        expand=\"md\"\n        id=\"sidenav-main\"\n      >\n        <Container fluid>\n          {/* Toggler */}\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            onClick={this.toggleCollapse}\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n\n          <NavbarBrand className='pt-0 logo h1'>TremorVision</NavbarBrand>\n          \n          {/* Collapse */}\n          <Collapse navbar isOpen={this.state.collapseOpen}>\n            {/* Collapse header */}\n            <div className=\"navbar-collapse-header d-md-none\">\n              <Row>\n                {logo ? (\n                  <Col className=\"collapse-brand\" xs=\"6\">\n                    Navigation\n                  </Col>\n                ) : null}\n                <Col className=\"collapse-close\" xs=\"6\">\n                  <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    onClick={this.toggleCollapse}\n                  >\n                    <span />\n                    <span />\n                  </button>\n                </Col>\n              </Row>\n            </div>\n\n            <Nav navbar>\n              <NavItem>\n                <NavLink\n                  to='/app/dashboard'\n                  tag={NavLinkRRD}\n                  onClick={this.closeCollapse}\n                  activeClassName=\"active\"\n                >\n                  <i className={'ni ni-tv-2 text-primary'} />\n                  Dashboard\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink\n                  to='/app/history'\n                  tag={NavLinkRRD}\n                  onClick={this.closeCollapse}\n                  activeClassName=\"active\"\n                >\n                  <i className={'ni ni-bullet-list-67 text-primary'} />\n                  History\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink\n                  to='/app/messages'\n                  tag={NavLinkRRD}\n                  onClick={this.closeCollapse}\n                  activeClassName=\"active\"\n                >\n                  <i className={'ni ni-email-83 text-primary'} />\n                  Messages\n                </NavLink>\n              </NavItem>\n            </Nav>\n\n            {/* Divider */}\n            <hr className=\"my-4\" />\n\n            <Nav navbar>\n              <NavItem>\n                <NavLink\n                  to='/app/about'\n                  tag={NavLinkRRD}\n                  onClick={this.closeCollapse}\n                  activeClassName=\"active\"\n                >\n                About Us\n                </NavLink>\n              </NavItem>\n\n              <NavItem>\n                <NavLink href=\"mailto:tremorvisionapp@gmail.com\">\n                  Contact Us\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React from 'react';\nimport {Doughnut, Chart} from 'react-chartjs-2';\n\n// some of this code is a variation on https://jsfiddle.net/cmyker/u6rr5moq/\nvar originalDoughnutDraw = Chart.controllers.doughnut.prototype.draw;\nChart.helpers.extend(Chart.controllers.doughnut.prototype, {\n  draw: function() {\n    originalDoughnutDraw.apply(this, arguments);\n    \n    var chart = this.chart;\n    var width = chart.chart.width;\n    var height;\n    var fontSize;\n\n    if (width > 205) {\n      height = chart.chart.height * 0.8;\n      fontSize = (height / 50).toFixed(2); //def: 114\n    } else {\n      height = chart.chart.height * 0.6;\n      fontSize = (height / 50).toFixed(2); //def: 114\n    }\n\n    var ctx = chart.chart.ctx;\n    ctx.font = 'bold ' + fontSize + \"em poppins\";\n    ctx.textBaseline = \"middle\";\n    \n\n    var sum = 0;\n    for (var i = 0; i < chart.config.data.datasets[0].data.length; i++) {\n      sum += chart.config.data.datasets[0].data[i];\n    }\n\n    var text = Math.round((chart.config.data.datasets[0].data[0] / sum) * 100).toString() + \"%\",\n        textX = Math.round((width - ctx.measureText(text).width) / 2),\n        textY = height * 0.5;\n    \n    ctx.fillStyle = \"#2DCE89\";\n    ctx.fillText(text, textX, textY);\n  }\n});\n\nconst options = {\n  legend: {\n    display: true,\n    position: 'bottom',\n    onClick: null\n  },\n  tooltips: {\n    mode: 'point'\n  }\n}\n\nclass DonutWithText extends React.Component {\n  render() {\n    return (\n      <div>\n        <Doughnut data={this.props.data} options={options}/>\n      </div>\n    );\n  }\n};\n\nexport default DonutWithText;","import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport CanvasDraw from 'react-canvas-draw'\nimport moment from 'moment';\n\nclass ModalTest extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            intructions: 'Trace the entire spiral and press evaluate.',\n            modal: false,\n            results: false,\n            resultText: '',\n            percent: 0\n        };\n        this.toggle = this.toggle.bind(this);\n    }\n\n    clearModal() {\n        this.setState({\n            results: false,\n            resultText: ''\n        })\n    }\n\n    toggle() {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    makeblob(dataURL) {\n        var BASE64_MARKER = ';base64,';\n        var parts;\n        var contentType;\n        var raw;\n\n        if (dataURL.indexOf(BASE64_MARKER) === -1) {\n            parts = dataURL.split(',');\n            contentType = parts[0].split(':')[1];\n            raw = decodeURIComponent(parts[1]);\n            return new Blob([raw], { type: contentType });\n        }\n        parts = dataURL.split(BASE64_MARKER);\n        contentType = parts[0].split(':')[1];\n        raw = window.atob(parts[1]);\n        var rawLength = raw.length;\n\n        var uInt8Array = new Uint8Array(rawLength);\n\n        for (var i = 0; i < rawLength; ++i) {\n            uInt8Array[i] = raw.charCodeAt(i);\n        }\n\n        return new Blob([uInt8Array], { type: contentType });\n    };\n\n    populateResult(data, img) {\n        let parkisonsPercentage;\n        let healthyPercentage;\n        if (data.predictions[0].tagName.toLowerCase() === 'parkinson') {\n            parkisonsPercentage = data.predictions[0].probability;\n            healthyPercentage = data.predictions[1].probability;\n        } else {\n            healthyPercentage = data.predictions[0].probability;\n            parkisonsPercentage = data.predictions[1].probability;\n        }\n        let percentage;\n        let relation;\n        if (healthyPercentage <= parkisonsPercentage) {\n            percentage = (parkisonsPercentage * 100).toFixed(1);\n            relation = <span className='bg-danger'> Parkinson's spirals </span>\n            this.setState({\n                percent: percentage * -1\n            })\n        } else {\n            percentage = (healthyPercentage * 100).toFixed(1);\n            relation = <span className='bg-info'>healthy spirals</span>\n            this.setState({\n                percent: percentage * 1\n            })\n        }\n        let text = <div>Our model shows that your spiral is {percentage}% similar to known {relation}</div>\n        this.setState({\n            results: true,\n            resultText: text,\n            spiralRes: img\n        })\n        var btn = document.getElementById('btn-download');\n        btn.addEventListener('click', function (e) {\n            btn.href = img;\n        });\n    }\n\n    pingPlatform(e, img) {\n        e.preventDefault();\n        let url = \"https://southcentralus.api.cognitive.microsoft.com/customvision/v3.0/Prediction/c6ee0724-e2fc-446c-9dfd-f1cef6f40479/classify/iterations/Iteration7/image\";\n        let imgBlob = this.makeblob(img);\n        // const req = new Request()\n        fetch(url, {\n            headers: {\n                \"Prediction-Key\": \"89884caaab6a49b08c7988717547d4f8\",\n                \"Content-Type\": \"application/octet-stream\"\n            },\n            method: 'POST',\n            // processData: false,\n            body: imgBlob\n        })\n            .then((response) => {\n                return response.json();\n            })\n            .then((data) => {\n                this.populateResult(data, img);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    finishTest() {\n        this.setState({\n            results: false,\n            resultText: '',\n            modal: false\n        })\n        var property = document.getElementById(\"test-btn\");\n        property.innerHTML = \"Complete\";\n        property.style.backgroundColor = \"#2dce89\";\n        property.style.borderColor = \"#2dce89\";\n        this.props.callback(this.state.percent);\n        this.props.updateDataCallback(this.state.percent);\n    }\n\n    isCanvasBlank(e, data, dataURL) {\n        if (JSON.parse(data)[\"lines\"].length === 0) {\n            this.setState({\n                intructions: 'Please trace the entire spiral before evaluating.'\n            })\n            var property = document.getElementById(\"help-txt\");\n            property.classList.add(\"fading\");\n            setTimeout(function(){property.classList.remove(\"fading\");}, 1000);\n        } else {\n            this.pingPlatform(e, dataURL)\n        }\n    }\n\n    render() {\n        let content;\n        if (this.state.results === true) {\n            content = <>\n                <ModalBody>\n                    <h3>{this.state.resultText}</h3>\n                    <p className='text-muted'>Click finish for your results to be logged and sent to your doctor. You may also personally download your image or try again.</p>\n                    <img alt=\"Guide Spiral\" src={this.state.spiralRes} className='img-thumbnail mx-auto small-img'></img>\n                </ModalBody>\n                <ModalFooter>\n                    <Button\n                        color=\"secondary\"\n                        onClick={() => { this.clearModal() }}\n                    >Retry</Button>{' '}\n                    <Button\n                        color=\"primary\"\n                        id=\"btn-download\"\n                        href=\"#\"\n                        download={moment().format()}\n                    >Download</Button>\n\n                    <Button\n                        color=\"primary\"\n                        onClick={() => { this.finishTest() }}\n                    >Finish</Button>\n                </ModalFooter>\n            </>\n\n        } else {\n            content = <>\n                <ModalBody className='text-center'>\n                <p id='help-txt' className='text-muted'>{this.state.intructions}</p>\n                    <div className='test mt-2'>\n                        <CanvasDraw\n                            className='mx-auto sig-canvas'\n                            lazyRadius={0}\n                            brushRadius={2}\n                            brushColor=\"#222222\"\n                            hideGrid\n                            hideInterface\n                            canvasHeight='100%'\n                            canvasWidth='100%'\n                            ref={(CanvasReact) => this.saveableCanvas = CanvasReact}\n                        />\n                    </div>\n                </ModalBody>\n                <ModalFooter>\n                    <Button\n                        color=\"secondary\"\n                        onClick={() => { this.saveableCanvas.clear() }}\n                    >Clear</Button>\n                    \n                    <Button\n                        color=\"primary\"\n                        onClick={(e) => {this.isCanvasBlank(e, this.saveableCanvas.getSaveData(),this.saveableCanvas.canvasContainer.children[1].toDataURL() )}}\n                    >Evaluate</Button>\n                </ModalFooter>\n            </>\n        }\n\n        return (\n            <div>\n                <Button color=\"primary\" size='lg' id=\"test-btn\" className='btn-msg' onClick={this.toggle}>{this.props.buttonLabel}</Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle} className='modal-header'><h3>Spiral Drawing Test</h3></ModalHeader>\n                    {content}\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default ModalTest;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Navbar,\n  Nav,\n  Container,\n  Media\n} from \"reactstrap\";\n\nclass Navigation extends React.Component {\n  render() {\n    return (\n      <>\n        <Navbar className=\"navbar-top\" expand=\"md\" id=\"navbar-main\">\n          <Container fluid>\n            <Link\n              className=\"h4 mb-0 text-uppercase d-none d-lg-inline-block\"\n              to=\"/\"\n            >\n            </Link>\n            \n            <Nav className=\"align-items-center d-none d-md-flex\" navbar>\n              <UncontrolledDropdown nav>\n                <DropdownToggle className=\"pr-0\" nav>\n                  <Media className=\"align-items-center\">\n                    <span className=\"avatar avatar-sm rounded-circle\">\n                      <img\n                        alt=\"...\"\n                        src={require(\"assets/img/janae.png\")}\n                      />\n                    </span>\n                    <Media className=\"ml-2 d-none d-lg-block\">\n                      <span className=\"mb-0 text-sm font-weight-bold .font-darker\">\n                         Janae Chan\n                      </span>\n                    </Media>\n                  </Media>\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                  <DropdownItem className=\"noti-title\" header tag=\"div\">\n                    <h6 className=\"text-overflow m-0\">Welcome!</h6>\n                  </DropdownItem>\n                  <DropdownItem to=\"/user-profile\" tag={Link}>\n                    <i className=\"ni ni-single-02\" />\n                    <span>My profile</span>\n                  </DropdownItem>\n                  <DropdownItem to=\"/user-profile\" tag={Link}>\n                    <i className=\"ni ni-settings-gear-65\" />\n                    <span>Settings</span>\n                  </DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem href=\"#pablo\" onClick={e => e.preventDefault()}>\n                    <i className=\"ni ni-user-run\" />\n                    <span>Logout</span>\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n          </Container>\n        </Navbar>\n      </>\n    );\n  }\n}\n\nexport default Navigation;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport classnames from \"classnames\";\nimport Chart from \"chart.js\";\nimport moment from 'moment';\nimport { Line } from \"react-chartjs-2\";\nimport DonutWithText from '../components/donutChart';\nimport Modal from '../components/modal';\nimport Navigation from \"components/navbar.js\";\n\nimport {\n  chartOptions,\n  parseOptions,\n  chartExample1\n} from \"components/charts.js\";\n\nimport {\n  Alert,\n  Card,\n  CardHeader,\n  CardBody,\n  NavItem,\n  NavLink,\n  Nav,\n  Progress,\n  Container,\n  Row,\n  Col,\n  CardTitle,\n  CardText\n} from \"reactstrap\";\n\nconst defaultData = [82, 18];\nconst backgroundColor = ['#2DCE89', '#11CDEF'];\nconst labels = ['Healthy', 'Parkinson\\'s'];\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeNav: 1,\n      chartExample1Data: \"data1\",\n      isFinished: \"Not Done\",\n      toDoMessage: \"No data collected today, press the button below to get started.\",\n      data: {\n        datasets: [{\n          data: defaultData,\n          backgroundColor: backgroundColor,\n        }],\n        labels: labels\n      }\n    };\n    if (window.Chart) {\n      parseOptions(Chart, chartOptions());\n    }\n  }\n  toggleNavs = (e, index) => {\n    e.preventDefault();\n    if (this.state.activeNav !== index) {\n      this.setState({\n        activeNav: index,\n        chartExample1Data:\n          this.state.chartExample1Data === \"data1\" ? \"data2\" : \"data1\"\n      });\n    }\n  };\n\n\n  getCurrentWeek = (e) => {\n    let currentDate = moment();\n    let weekStart = currentDate.clone().startOf('week');\n    let days = [];\n\n    for (let i = 0; i <= 6; i++) {\n      let day = moment(weekStart).add(i, 'days').format(\"dddd\").substring(0, 3);\n      let dayNumber = moment(weekStart).add(i, 'days').format(\"D\");\n      let col = <Col>\n        <div className={`day ${i === currentDate.day() ? 'dayActive' : ''}`}>\n          <Row><Col>{day}</Col></Row>\n          <Row><Col>{dayNumber}</Col></Row>\n        </div>\n      </Col>\n      days.push(col);\n    }\n    return days;\n  }\n\n  getTasks = (e) => {\n    let currentDate = moment();\n    let weekStart = currentDate.clone().startOf('week');\n    let tasks = [];\n\n    for (let i = 6; i >= 0; i--) {\n      if (i < currentDate.day()) {\n      let day = moment(weekStart).add(i, 'days').format(\"LL\");\n      let row = \n      <Row className='w-100 mx-auto'>\n        <Col className='px-0'>\n          <Card className='shadow-lg p-3 mb-4 bg-white rounded task'>\n            <Row className='d-flex justify-content-between'>\n              <Col sm='8'><CardTitle className='task-title mb-0 pb-0'>Complete your Parkinson’s Test</CardTitle></Col>\n              <Col sm='2'><CardText><small class=\"text-muted\">Reminder</small></CardText></Col>\n            </Row>\n            <Row><Col><small class=\"text-muted\">Due date: {day} </small></Col></Row>\n\n            <div className='d-flex justify-content-between'>\n              <div className=\"d-flex align-items-center\">\n                <span className=\"avatar avatar-sm rounded-circle\">\n                  <img\n                    alt=\"...\"\n                    src={require(\"assets/img/geruh.jpeg\")}\n                  />\n                </span>\n                <small class=\"text-muted ml-2\">Dr. Drew Gallardo</small>\n              </div>\n              <Alert id='task-btn' color=\"success\">Complete</Alert>\n              {/* <Button color=\"primary\" id='task-btn' className='btn-msg' size=\"lg\" type=\"button\">{this.state.isFinished}</Button> */}\n            </div>\n          </Card>\n        </Col>\n      </Row>\n      tasks.push(row);\n      }\n    }\n    return tasks;\n  };\n\n  spiralTestFinished = (percent) => {\n    this.setState({\n      isFinished: \"Complete\",\n      toDoMessage: \"You have completed all your tests today!\",\n      spiralRes: percent\n\n    })\n    var property = document.getElementById(\"task-btn\");\n    property.style.backgroundColor = \"#2dce89\";\n    property.style.borderColor = \"#2dce89\";\n  }\n\n  updateData = (result) => {\n    let newPercent = 0;\n    let newResult = [];\n    if (result > 0) {\n      newPercent = (this.state.data.datasets[0].data[0] + result) / 2;\n      newResult = [newPercent, 100 - newPercent];\n    } else {\n      newPercent = (this.state.data.datasets[0].data[1] + (result * -1)) / 2;\n      newResult = [100 - newPercent, newPercent];\n    }\n\n    // round data\n    newResult[0] = Math.round(newResult[0] * Math.pow(10,2)) / Math.pow(10,2)\n    newResult[1] = Math.round(newResult[1] * Math.pow(10,2)) / Math.pow(10,2)\n\n    let data = {\n      datasets: [{\n        data: newResult,\n        backgroundColor: backgroundColor,\n      }],\n      labels: labels\n    }\n    this.setState({\n      data: data\n    })\n  }\n\n  render() {\n    return (\n      <>\n      <div className=\"main-content\">\n        <Navigation/> \n        <Container className=\"pb-4 pt-5 pt-md-6\" fluid>\n          <Row>\n            <Col className=\"mb-5 mb-xl-0\" xl=\"7\">\n              <Card className='shadow-lg'>\n                <CardHeader>\n                  <h6 className=\"text-uppercase text-light\">\n                    2 out of 7 tasks completed this week\n                  </h6>\n                  <div>\n                    <Progress\n                      max=\"100\"\n                      value=\"28.5\"\n                      barClassName=\"bg-gradient-success\"\n                    />\n                  </div>\n                  <Row><Col className='date mb-4'>{moment().format(\"dddd, MMMM Do\")}</Col></Row>\n                  <Row className='d-flex justify-content-between'>\n                    {this.getCurrentWeek()}\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  {/* generate msgs */}\n                  <Row className='w-100 mx-auto'>\n                    <Col className='px-0'>\n                      <Card className='shadow-lg p-3 mb-4 bg-white rounded task'>\n                        <Row className='d-flex justify-content-between'>\n                          <Col sm='8'>\n                            <CardTitle className='task-title mb-0 pb-0'>Complete your Parkinson’s Test</CardTitle>\n                          </Col>\n                          <Col sm='2'>\n                            <CardText><small class=\"text-muted\">Reminder</small></CardText>\n                          </Col>\n                        </Row>\n                        <Row><Col><small class=\"text-muted\">Due date: {moment().format(\"LL\")} </small></Col></Row>\n\n                        <div className='d-flex justify-content-between'>\n                          <div className=\"d-flex align-items-center\">\n                            <span className=\"avatar avatar-sm rounded-circle\">\n                              <img\n                                alt=\"...\"\n                                src={require(\"assets/img/geruh.jpeg\")}\n                              />\n                            </span>\n                            <small class=\"text-muted ml-2\">Dr. Drew Gallardo</small>\n                          </div>\n                          <Alert id='task-btn' color=\"primary\">\n                            {this.state.isFinished}\n                          </Alert>\n                          {/* <Button color=\"primary\" id='task-btn' className='btn-msg' size=\"lg\" type=\"button\">{this.state.isFinished}</Button> */}\n                        </div>\n                      </Card>\n                    </Col>\n                  </Row>\n\n                  <Row className='w-100 mx-auto'>\n                    <Col className='px-0'>\n                      <Card className='shadow-lg p-3 bg-white rounded task mb-4'>\n                        <Row className='d-flex justify-content-between'>\n                          <Col sm='8'>\n                            <CardTitle className='task-title mb-0 pb-0'>Take Prescription</CardTitle>\n                          </Col>\n                          <Col sm='2'>\n                            <CardText><small class=\"text-muted\">Reminder</small></CardText>\n                          </Col>\n                        </Row>\n                        <Row><Col><small class=\"text-muted\">Due date: {moment().format(\"LL\")}</small></Col></Row>\n\n                        <div className='d-flex justify-content-between'>\n                          <div className=\"d-flex align-items-center\">\n                            <span className=\"avatar avatar-sm rounded-circle\">\n                              <img\n                                alt=\"...\"\n                                src={require(\"assets/img/geruh.jpeg\")}\n                              />\n                            </span>\n                            <small class=\"text-muted ml-2\">Dr.  Drew Gallardo</small>\n                          </div>\n                          <Alert color=\"primary\">Not Done</Alert>\n                          {/* <Button color=\"primary\" className='btn-msg' size=\"lg\" type=\"button\">Not Done</Button> */}\n                        </div>\n                      </Card>\n                    </Col>\n                  </Row>\n\n                  <Row className='w-100 mx-auto'>\n                    <Col className='px-0'>\n                      <Card className='shadow-lg p-3 bg-white rounded task mb-4'>\n                        <Row className='d-flex justify-content-between'>\n                          <Col sm='8'>\n                            <CardTitle className='task-title mb-0 pb-0'>Complete your Parkinson’s Test</CardTitle>\n                          </Col>\n                          <Col sm='2'>\n                            <CardText><small class=\"text-muted\">Reminder</small></CardText>\n                          </Col>\n                        </Row>\n                        <Row><Col><small class=\"text-muted\">Due date: {moment().subtract(1, 'days').format(\"LL\")}</small></Col></Row>\n\n                        <div className='d-flex justify-content-between'>\n                          <div className=\"d-flex align-items-center\">\n                            <span className=\"avatar avatar-sm rounded-circle\">\n                              <img\n                                alt=\"...\"\n                                src={require(\"assets/img/geruh.jpeg\")}\n                              />\n                            </span>\n                            <small class=\"text-muted ml-2\">Dr. Drew Gallardo</small>\n                          </div>\n                          <Alert color=\"success\">Complete</Alert>\n                          {/* <Button color=\"success\" size=\"lg\" type=\"button\">Complete</Button> */}\n                        </div>\n                      </Card>\n                    </Col>\n                  </Row>\n                  <Row><Col><div className='mx-auto day dayActive'>Show More</div></Col></Row>\n                </CardBody>\n              </Card>\n            </Col>\n\n            {/* big task end */}\n\n            <Col xl='5'>\n              <Row>\n                <Col xs='12' className='pb-4'>\n                  <Card className='shadow-lg date'>\n                    <CardHeader> Daily Message</CardHeader>\n                    <CardBody>\n                      <Row>\n                        <Col xs='6'>\n                          <DonutWithText data={this.state.data}/>\n                        </Col>\n                        <Col xs='6'>{this.state.toDoMessage}</Col>\n                      </Row>\n                      <div className='d-flex justify-content-between'>\n                        <div></div>\n                        <Modal buttonLabel=\"Not Done\" callback={this.spiralTestFinished} updateDataCallback={this.updateData}/> {/* pass in callback */}\n                      </div>\n                    </CardBody>\n                  </Card>\n                </Col>\n\n                <Col xs='12' className='pt-1'>\n\n                  <Card className='shadow-lg'>\n                    <CardHeader className=\"bg-transparent\">\n                      <Row className=\"align-items-center\">\n                        <div className=\"col\">\n                          <h6 className=\"text-uppercase text-light ls-1 mb-1\">\n                            Overview\n                      </h6>\n                          <h2 className=\"mb-0\">Progress Tracking</h2>\n                        </div>\n                        <div className=\"col\">\n                          <Nav className=\"justify-content-end\" pills>\n                            <NavItem>\n                              <NavLink\n                                className={classnames(\"py-2 px-3\", {\n                                  active: this.state.activeNav === 1\n                                })}\n                                href=\"#pablo\"\n                                onClick={e => this.toggleNavs(e, 1)}\n                              >\n                                <span className=\"d-none d-md-block\">Month</span>\n                                <span className=\"d-md-none\">M</span>\n                              </NavLink>\n                            </NavItem>\n                            <NavItem>\n                              <NavLink\n                                className={classnames(\"py-2 px-3\", {\n                                  active: this.state.activeNav === 2\n                                })}\n                                data-toggle=\"tab\"\n                                href=\"#pablo\"\n                                onClick={e => this.toggleNavs(e, 2)}\n                              >\n                                <span className=\"d-none d-md-block\">Week</span>\n                                <span className=\"d-md-none\">W</span>\n                              </NavLink>\n                            </NavItem>\n                          </Nav>\n                        </div>\n                      </Row>\n                    </CardHeader>\n                    <CardBody>\n                      {/* Chart */}\n                      <div className=\"chart\">\n                        <Line\n                          data={chartExample1[this.state.chartExample1Data]}\n                          options={chartExample1.options}\n                          getDatasetAtEvent={e => console.log(e)}\n                        />\n                      </div>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n      </>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport Navigation from \"components/navbar.js\";\n\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardTitle,\n  CardText,\n  Col,\n  Container,\n  Row\n} from \"reactstrap\";\n\nclass About extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"main-content\">       \n        <Navigation /> \n        <Container className=\"pb-4 pt-5 pt-md-6\" fluid>\n        <Col>\n        <Card className='shadow-lg'>\n            <Row className='w-100 mx-auto'>\n            <section id=\"about\">\n                <div>\n                    <h4>About Us</h4>\n                    <span class=\"subhead\">Our Story</span>\n                    <p id=\"about-txt\">TremorVision started off as a hackathon project in October 2019, \n                    and the idea stemmed from our passion about utilizing technology to tackle problems \n                    in health; creating something simple yet impactful. Parkinson’s Disease (PD) is the \n                    second most common age-related neurodegenerative disorder and is a multifaceted disease \n                    with a variety of symptoms that progressively worsen with time. Although there is no cure, \n                    treatment can be effective if PD is caught early enough. We found that there is no \n                    standardized way of evaluating the spiral test despite it being one of the most \n                    commonly conducted tests to detect early-onset PD and track its progression. \n                    </p>\n                    <p></p>\n                    <span class=\"subhead\">Why TremorVision</span>\n                    <p id=\"about-txt\">\n                    Using TremorVision, subtle tremors can be detected earlier. Giving patients a head start \n                    in their fight against PD.\n\n                    Our tool empowers users to gain a holistic view of their health as it evolves over time, \n                    contributing to clinical decision support.\n\n                    Our platform connects patients and physicians remotely, reducing travel burden and \n                    increasing access to quality care.\n\n                    The data collected enables researchers and physicians to gain new insights on the \n                    global burden of this mysterious disease. \n                    </p>\n                </div>\n            </section>\n            </Row>\n            \n            <CardBody>\n            <div>\n            <span class=\"subhead\">Our Team</span>\n            </div>\n                <Row className='w-100 mx-auto'>\n                <Col className='px-0'>\n                    <Card class='card' style={{ width: \"15rem\" }}>\n                    <a href=\"https://www.linkedin.com/in/brandon-hong-591734128/\">\n                    <CardImg\n                        alt=\"Brandon Hong\"\n                        src={require(\"assets/img/brandonhong.jpeg\")}\n                        top\n                    /></a>\n                    <CardBody>\n                        <CardTitle>Brandon Hong</CardTitle>\n                        <CardText>\n                        <a href=\"https://www.linkedin.com/in/brandon-hong-591734128/\">\n                            <i class=\"fab fa-linkedin fa-2x\"></i>\n                        </a>\n                        </CardText>\n                    </CardBody>\n                    </Card>\n                </Col>\n                <Col className='px-0'>\n                    <Card style={{ width: \"15rem\" }}>\n                    <CardImg\n                        alt=\"Drew Gallardo\"\n                        src={require(\"assets/img/geruh.jpeg\")}\n                        top\n                    />\n                    <CardBody>\n                        <CardTitle>Drew Gallardo</CardTitle>\n                        <CardText>\n                        <a href=\"https://www.linkedin.com/in/drew-gallardo/\">\n                            <i class=\"fab fa-linkedin fa-2x\"></i>\n                        </a>\n                        </CardText> \n                    </CardBody>\n                    </Card>\n                </Col>\n                <Col className='px-0'>\n                    <Card style={{ width: \"15rem\" }}>\n                    <CardImg\n                        alt=\"Janae Chan\"\n                        src={require(\"assets/img/janaechan.png\")}\n                        top\n                    />\n                    <CardBody>\n                        <CardTitle>Janae Chan</CardTitle>\n                        <CardText>\n                        <a href=\"https://www.linkedin.com/in/janaechan/\">\n                            <i class=\"fab fa-linkedin fa-2x\"></i>\n                        </a>\n                        </CardText>\n                    </CardBody>\n                    </Card>\n                </Col>\n                <Col className='px-0'>\n                    <Card style={{ width: \"15rem\" }}>\n                    <CardImg\n                        alt=\"Robert Minneker\"\n                        src={require(\"assets/img/robert.jpg\")}\n                        top\n                    />\n                    <CardBody>\n                        <CardTitle>Robert Minneker</CardTitle>\n                        <CardText>\n                        <a href=\"https://www.linkedin.com/in/minneker/\">\n                            <i class=\"fab fa-linkedin fa-2x\"></i>\n                        </a>\n                        </CardText> \n                    </CardBody>\n                    </Card>\n                </Col>\n                </Row>\n            </CardBody>\n        </Card>\n      </Col>\n      </Container>\n    </div>\n      </>\n    );\n  }\n}\n\nexport default About;","import React, { Component } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport \"assets/plugins/nucleo/css/nucleo.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"assets/css/argon-dashboard-react.css\";\nimport \"assets/css/index.css\";\n\nimport Sidebar from \"./components/sidebar.js\";\nimport Dashboard from \"./pages/dashboard.js\";\nimport About from \"./pages/about.js\";\n\n\nclass App extends Component {\n  componentDidMount() {}\n\n  componentWillUnmount() {}\n\n  render() {\n    return (\n      <div>\n        <header>\n            <Sidebar/>\n            <Switch>\n                <Route exact path=\"/app\" component={Dashboard} />\n                <Route exact path=\"/app/dashboard\" component={Dashboard} />\n                <Route exact path=\"/app/history\" component={Dashboard} />\n                <Route exact path='/app/messages' component={Dashboard} />\n                <Route exact path=\"/app/about\" component={About} />} />\n                <Redirect from=\"/\" to=\"/app/dashboard\" />\n            </Switch>\n        </header>\n        <main></main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"assets/plugins/nucleo/css/nucleo.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"assets/css/argon-dashboard-react.css\";\nimport \"assets/css/index.css\";\n\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/geruh.7be79e97.jpeg\";","\nconst Chart = require(\"chart.js\");\n//\n// Chart extension for making the bars rounded\n// Code from: https://codepen.io/jedtrow/full/ygRYgo\n//\n\nChart.elements.Rectangle.prototype.draw = function () {\n  var ctx = this._chart.ctx;\n  var vm = this._view;\n  var left, right, top, bottom, signX, signY, borderSkipped;\n  var borderWidth = vm.borderWidth;\n  var cornerRadius = 6;\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || \"bottom\";\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || \"left\";\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    var halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    var borderLeft = left + (borderSkipped !== \"left\" ? halfStroke * signX : 0);\n    var borderRight =\n      right + (borderSkipped !== \"right\" ? -halfStroke * signX : 0);\n    var borderTop = top + (borderSkipped !== \"top\" ? halfStroke * signY : 0);\n    var borderBottom =\n      bottom + (borderSkipped !== \"bottom\" ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  var corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  var borders = [\"bottom\", \"left\", \"top\", \"right\"];\n  var startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  var corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (var i = 1; i < 4; i++) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    // let nextCorner = cornerAt(nextCornerId);\n\n    let width = corners[2][0] - corners[1][0];\n    let height = corners[0][1] - corners[1][1];\n    let x = corners[1][0];\n    let y = corners[1][1];\n    // eslint-disable-next-line\n    let radius = cornerRadius;\n\n    // Fix radius being too large\n    if (radius > height / 2) {\n      radius = height / 2;\n    }\n    if (radius > width / 2) {\n      radius = width / 2;\n    }\n\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n};\n\nvar mode = \"light\"; //(themeMode) ? themeMode : 'light';\nvar fonts = {\n  base: \"Open Sans\"\n};\n\n// Colors\nvar colors = {\n  gray: {\n    100: \"#f6f9fc\",\n    200: \"#e9ecef\",\n    300: \"#dee2e6\",\n    400: \"#ced4da\",\n    500: \"#adb5bd\",\n    600: \"#8898aa\",\n    700: \"#525f7f\",\n    800: \"#32325d\",\n    900: \"#212529\"\n  },\n  theme: {\n    default: \"#172b4d\",\n    primary: \"#5e72e4\",\n    secondary: \"#f4f5f7\",\n    info: \"#11cdef\",\n    success: \"#2dce89\",\n    danger: \"#f5365c\",\n    warning: \"#fb6340\"\n  },\n  black: \"#12263F\",\n  white: \"#FFFFFF\",\n  transparent: \"transparent\"\n};\n\n// Methods\n\n// Chart.js global options\nfunction chartOptions() {\n  // Options\n  var options = {\n    defaults: {\n      global: {\n        responsive: true,\n        maintainAspectRatio: false,\n        defaultColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontColor: mode === \"dark\" ? colors.gray[700] : colors.gray[600],\n        defaultFontFamily: fonts.base,\n        defaultFontSize: 13,\n        layout: {\n          padding: 0\n        },\n        legend: {\n          display: false,\n          position: \"bottom\",\n          labels: {\n            usePointStyle: true,\n            padding: 16\n          }\n        },\n        elements: {\n          point: {\n            radius: 0,\n            backgroundColor: colors.theme[\"primary\"]\n          },\n          line: {\n            tension: 0.4,\n            borderWidth: 4,\n            borderColor: colors.theme[\"primary\"],\n            backgroundColor: colors.transparent,\n            borderCapStyle: \"rounded\"\n          },\n          rectangle: {\n            backgroundColor: colors.theme[\"warning\"]\n          },\n          arc: {\n            backgroundColor: colors.theme[\"primary\"],\n            borderColor: mode === \"dark\" ? colors.gray[800] : colors.white,\n            borderWidth: 4\n          }\n        },\n        tooltips: {\n          enabled: true,\n          mode: \"index\",\n          intersect: false\n        }\n      },\n      doughnut: {\n        cutoutPercentage: 83,\n        legendCallback: function (chart) {\n          var data = chart.data;\n          var content = \"\";\n\n          data.labels.forEach(function (label, index) {\n            var bgColor = data.datasets[0].backgroundColor[index];\n\n            content += '<span class=\"chart-legend-item\">';\n            content +=\n              '<i class=\"chart-legend-indicator\" style=\"background-color: ' +\n              bgColor +\n              '\"></i>';\n            content += label;\n            content += \"</span>\";\n          });\n\n          return content;\n        }\n      }\n    }\n  };\n\n  // yAxes\n  Chart.scaleService.updateScaleDefaults(\"linear\", {\n    gridLines: {\n      borderDash: [2],\n      borderDashOffset: [2],\n      color: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      drawBorder: false,\n      drawTicks: false,\n      lineWidth: 0.5,\n      zeroLineWidth: 0,\n      zeroLineColor: mode === \"dark\" ? colors.gray[900] : colors.gray[300],\n      zeroLineBorderDash: [2],\n      zeroLineBorderDashOffset: [2]\n    },\n    ticks: {\n      beginAtZero: true,\n      padding: 10,\n      callback: function (value) {\n        if (!(value % 10)) {\n          return value;\n        }\n      }\n    }\n  });\n\n  // xAxes\n  Chart.scaleService.updateScaleDefaults(\"category\", {\n    gridLines: {\n      drawBorder: false,\n      drawOnChartArea: false,\n      drawTicks: false\n    },\n    ticks: {\n      padding: 20\n    }\n  });\n\n  return options;\n}\n\n// Parse global options\nfunction parseOptions(parent, options) {\n  for (var item in options) {\n    if (typeof options[item] !== \"object\") {\n      parent[item] = options[item];\n    } else {\n      parseOptions(parent[item], options[item]);\n    }\n  }\n}\n\n// Example 1 of Chart inside src/views/Index.js (Sales value - Card)\nlet chartExample1 = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            color: colors.gray[900],\n            zeroLineColor: colors.gray[900]\n          },\n          ticks: {\n            callback: function (value) {\n              if (!(value % 20)) {\n                return value;\n              }\n            }\n          }\n        }\n      ]\n    },\n    tooltips: {\n      callbacks: {\n        label: function (item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n\n          content += ' ' + yLabel + '% avg';\n          return content;\n        }\n      }\n    }\n  },\n  data1: canvas => {\n    return {\n      labels: [\"Oct\", \"Nov\", \"Dec\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\"],\n      datasets: [\n        {\n          label: \"Performance\",\n          data: [80, 82, 86, 89, 90, 86, 90, 90, 91]\n        }\n      ]\n    };\n  },\n  data2: canvas => {\n    return {\n      labels: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n      datasets: [\n        {\n          label: \"Performance\",\n          data: [80, 87, 86, 82, 83, 84, 87]\n        }\n      ]\n    };\n  }\n};\n\n\n\n// Example 2 of Chart inside src/views/Index.js (Total orders - Card)\nlet chartExample2 = {\n  options: {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            callback: function (value) {\n              if (!(value % 10)) {\n                //return '$' + value + 'k'\n                return value;\n              }\n            }\n          }\n        }\n      ]\n    },\n    tooltips: {\n      callbacks: {\n        label: function (item, data) {\n          var label = data.datasets[item.datasetIndex].label || \"\";\n          var yLabel = item.yLabel;\n          var content = \"\";\n          if (data.datasets.length > 1) {\n            content += label;\n          }\n          content += yLabel;\n          return content;\n        }\n      }\n    }\n  },\n  data: {\n    labels: [\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n    datasets: [\n      {\n        label: \"Sales\",\n        data: [25, 20, 30, 22, 17, 29],\n        maxBarThickness: 10\n      }\n    ]\n  }\n};\n\nmodule.exports = {\n  chartOptions, // used inside src/views/Index.js\n  parseOptions, // used inside src/views/Index.js\n  chartExample1, // used inside src/views/Index.js\n  chartExample2 // used inside src/views/Index.js\n};\n"],"sourceRoot":""}