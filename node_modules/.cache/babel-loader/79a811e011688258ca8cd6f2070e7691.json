{"ast":null,"code":"import _classCallCheck from \"/Users/geru/Desktop/argon-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geru/Desktop/argon-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/geru/Desktop/argon-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/geru/Desktop/argon-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/geru/Desktop/argon-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/geru/Desktop/argon-dashboard-react-master/src/components/dash/modal.js\";\nimport React, { useState, createRef, useRef } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'; // import Canvas from '../dash/canvas'\n\nimport CanvasDraw from 'react-canvas-draw';\nimport spiral from '../../assets/img/tremor/Spiral_image.jpg';\n\nvar ModalTest = /*#__PURE__*/function (_React$Component) {\n  _inherits(ModalTest, _React$Component);\n\n  var _super = _createSuper(ModalTest);\n\n  function ModalTest(props) {\n    var _this;\n\n    _classCallCheck(this, ModalTest);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      modal: true\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ModalTest, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        modal: !this.state.modal\n      });\n    }\n  }, {\n    key: \"pingPlatform\",\n    value: function pingPlatform(img) {\n      var url = \"https://westus2.api.cognitive.microsoft.com/customvision/v3.0/Prediction/6fede207-de99-4fbe-8f04-44a2154495ad/classify/iterations/Iteration8/image\";\n      var imgBlob = makeblob(img); // const req = new Request()\n\n      fetch(url, {\n        headers: {\n          \"Prediction-Key\": \"78a3f4d1ae95492680685c14da50480d\",\n          \"Content-Type\": \"application/octet-stream\",\n          \"Prediction-key\": \"78a3f4d1ae95492680685c14da50480d\"\n        },\n        method: 'POST',\n        // processData: false,\n        body: imgBlob\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        populateResult(data, img);\n      }).catch(function (error) {\n        console.log('err');\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // let saveableCanvas = useRef();\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        size: \"lg\",\n        className: \"btn-msg\",\n        onClick: this.toggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, this.props.buttonLabel), /*#__PURE__*/React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        className: this.props.className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ModalHeader, {\n        toggle: this.toggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, \"Spiral Drawing Test\"), /*#__PURE__*/React.createElement(ModalBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CanvasDraw, {\n        className: \"mx-auto sig-canvas\",\n        lazyRadius: \"0\",\n        brushRadius: \"2\",\n        brushColor: \"#222222\",\n        hideGrid: \"true\",\n        hideInterface: \"true\" // imgSrc= 'url(../../assets/img/tremor/Spiral_image.jpg)'\n        // saveData={localStorage.getItem(\"savedDrawing\")}\n        // ref={saveableCanvas}\n        ,\n        ref: function ref(CanvasReact) {\n          return _this2.saveableCanvas = CanvasReact;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(ModalFooter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"secondary\",\n        onClick: function onClick() {\n          _this2.saveableCanvas.clear();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }\n      }, \"Clear\"), ' ', /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        onClick: function onClick() {\n          _this2.pingPlatform(_this2.saveableCanvas.canvasContainer.children[1].toDataURL());\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }\n      }, \"Evaluate\"))));\n    }\n  }]);\n\n  return ModalTest;\n}(React.Component);\n\nexport default ModalTest;","map":{"version":3,"sources":["/Users/geru/Desktop/argon-dashboard-react-master/src/components/dash/modal.js"],"names":["React","useState","createRef","useRef","Button","Modal","ModalHeader","ModalBody","ModalFooter","CanvasDraw","spiral","ModalTest","props","state","modal","toggle","bind","setState","img","url","imgBlob","makeblob","fetch","headers","method","body","then","response","json","data","populateResult","catch","error","console","log","buttonLabel","className","CanvasReact","saveableCanvas","clear","pingPlatform","canvasContainer","children","toDataURL","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,WAAhD,QAAmE,YAAnE,C,CACA;;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,MAAP,MAAmB,0CAAnB;;IAGMC,S;;;;;AACF,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,+BAAd;AALe;AAMlB;;;;6BAEQ;AACL,WAAKC,QAAL,CAAc;AACVH,QAAAA,KAAK,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADT,OAAd;AAGH;;;iCAEYI,G,EAAK;AACd,UAAIC,GAAG,GAAG,oJAAV;AACA,UAAIC,OAAO,GAAGC,QAAQ,CAACH,GAAD,CAAtB,CAFc,CAGd;;AACAI,MAAAA,KAAK,CAACH,GAAD,EAAM;AACPI,QAAAA,OAAO,EAAE;AACL,4BAAkB,kCADb;AAEL,0BAAgB,0BAFX;AAGL,4BAAkB;AAHb,SADF;AAMPC,QAAAA,MAAM,EAAE,MAND;AAOP;AACAC,QAAAA,IAAI,EAAEL;AARC,OAAN,CAAL,CAUKM,IAVL,CAUU,UAAUC,QAAV,EAAoB;AACtB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,OAZL,EAaKF,IAbL,CAaU,UAAUG,IAAV,EAAgB;AAClBC,QAAAA,cAAc,CAACD,IAAD,EAAOX,GAAP,CAAd;AACH,OAfL,EAgBKa,KAhBL,CAgBW,UAAUC,KAAV,EAAiB;AACpBC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACH,OAlBL;AAmBH;;;6BAEQ;AAAA;;AAEL;AACA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,IAAI,EAAC,IAA7B;AAAkC,QAAA,SAAS,EAAC,SAA5C;AAAsD,QAAA,OAAO,EAAE,KAAKnB,MAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6E,KAAKH,KAAL,CAAWuB,WAAxF,CADJ,eAEI,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE,KAAKtB,KAAL,CAAWC,KAA1B;AAAiC,QAAA,MAAM,EAAE,KAAKC,MAA9C;AAAsD,QAAA,SAAS,EAAE,KAAKH,KAAL,CAAWwB,SAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,WAAD;AAAa,QAAA,MAAM,EAAE,KAAKrB,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI,oBAAC,UAAD;AACI,QAAA,SAAS,EAAC,oBADd;AAEI,QAAA,UAAU,EAAC,GAFf;AAGI,QAAA,WAAW,EAAC,GAHhB;AAII,QAAA,UAAU,EAAC,SAJf;AAKI,QAAA,QAAQ,EAAC,MALb;AAMI,QAAA,aAAa,EAAC,MANlB,CAOI;AACA;AACA;AATJ;AAUI,QAAA,GAAG,EAAE,aAACsB,WAAD;AAAA,iBAAe,MAAI,CAACC,cAAL,GAAoBD,WAAnC;AAAA,SAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAFJ,eAkBI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,MAAD;AACI,QAAA,KAAK,EAAC,WADV;AAEI,QAAA,OAAO,EAAE,mBAAM;AAAE,UAAA,MAAI,CAACC,cAAL,CAAoBC,KAApB;AAA6B,SAFlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,EAIoB,GAJpB,eAKA,oBAAC,MAAD;AACI,QAAA,KAAK,EAAC,SADV;AAEI,QAAA,OAAO,EAAE,mBAAM;AAAE,UAAA,MAAI,CAACC,YAAL,CAAkB,MAAI,CAACF,cAAL,CAAoBG,eAApB,CAAoCC,QAApC,CAA6C,CAA7C,EAAgDC,SAAhD,EAAlB;AAAgF,SAFrG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALA,CAlBJ,CAFJ,CADJ;AAoCH;;;;EA/EmB3C,KAAK,CAAC4C,S;;AAkF9B,eAAejC,SAAf","sourcesContent":["import React, { useState, createRef, useRef } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n// import Canvas from '../dash/canvas'\nimport CanvasDraw from 'react-canvas-draw'\nimport spiral from '../../assets/img/tremor/Spiral_image.jpg'\n\n\nclass ModalTest extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal: true\n        };\n        this.toggle = this.toggle.bind(this);\n    }\n\n    toggle() {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    pingPlatform(img) {\n        let url = \"https://westus2.api.cognitive.microsoft.com/customvision/v3.0/Prediction/6fede207-de99-4fbe-8f04-44a2154495ad/classify/iterations/Iteration8/image\";\n        let imgBlob = makeblob(img);\n        // const req = new Request()\n        fetch(url, {\n            headers: {\n                \"Prediction-Key\": \"78a3f4d1ae95492680685c14da50480d\",\n                \"Content-Type\": \"application/octet-stream\",\n                \"Prediction-key\": \"78a3f4d1ae95492680685c14da50480d\"\n            },\n            method: 'POST',\n            // processData: false,\n            body: imgBlob\n        })\n            .then(function (response) {\n                return response.json();\n            })\n            .then(function (data) {\n                populateResult(data, img);\n            })\n            .catch(function (error) {\n                console.log('err');\n            });\n    }\n\n    render() {\n\n        // let saveableCanvas = useRef();\n        return (\n            <div>\n                <Button color=\"primary\" size='lg' className='btn-msg' onClick={this.toggle}>{this.props.buttonLabel}</Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle}>Spiral Drawing Test</ModalHeader>\n                    <ModalBody>\n\n                        <CanvasDraw\n                            className='mx-auto sig-canvas'\n                            lazyRadius='0'\n                            brushRadius='2'\n                            brushColor=\"#222222\"\n                            hideGrid='true'\n                            hideInterface='true'\n                            // imgSrc= 'url(../../assets/img/tremor/Spiral_image.jpg)'\n                            // saveData={localStorage.getItem(\"savedDrawing\")}\n                            // ref={saveableCanvas}\n                            ref={(CanvasReact)=>this.saveableCanvas=CanvasReact}\n                        />\n\n                    </ModalBody>\n                    <ModalFooter>\n                    <Button\n                        color=\"secondary\"\n                        onClick={() => { this.saveableCanvas.clear() }}\n                        >Clear</Button>{' '}\n                    <Button\n                        color=\"primary\"\n                        onClick={() => { this.pingPlatform(this.saveableCanvas.canvasContainer.children[1].toDataURL()) }}\n                    >\n                        Evaluate\n                    </Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default ModalTest;\n"]},"metadata":{},"sourceType":"module"}