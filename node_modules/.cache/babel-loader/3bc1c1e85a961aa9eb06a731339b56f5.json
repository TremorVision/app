{"ast":null,"code":"import _classCallCheck from \"/Users/geru/Desktop/argon-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geru/Desktop/argon-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/geru/Desktop/argon-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/geru/Desktop/argon-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/geru/Desktop/argon-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/geru/Desktop/argon-dashboard-react-master/src/components/dash/modal.js\";\nimport React, { useState, createRef, useRef } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'; // import Canvas from '../dash/canvas'\n\nimport CanvasDraw from 'react-canvas-draw';\nimport spiral from '../../assets/img/tremor/Spiral_image.jpg'; // const ModalExample = (props) => {\n//     const {\n//         buttonLabel,\n//         className\n//     } = props;\n//     const saveableCanvas = useRef();\n//     const [modal, setModal] = useState(false);\n//     const toggle = () => setModal(!modal)\n//     return (\n//         <div>\n//             <Button color=\"primary\" size='lg' className='btn-msg' onClick={toggle}>{buttonLabel}</Button>\n//             <Modal isOpen={modal} toggle={toggle} className={className}>\n//                 <ModalHeader toggle={toggle}>Spiral Drawing Test</ModalHeader>\n//                 <ModalBody>\n//                     <CanvasDraw\n//                         className='mx-auto sig-canvas'\n//                         lazyRadius='0'\n//                         brushRadius='2'\n//                         brushColor=\"#222222\"\n//                         hideGrid='true'\n//                         hideInterface='true'\n//                         // imgSrc= 'url(../../assets/img/tremor/Spiral_image.jpg)'\n//                         // saveData={localStorage.getItem(\"savedDrawing\")}\n//                         ref={saveableCanvas}\n//                     />\n//                 </ModalBody>\n//                 <ModalFooter>\n//                     <Button\n//                         color=\"secondary\"\n//                         onClick={() => { saveableCanvas.current.clear() }}>Clear</Button>\n//                     <Button\n//                         color=\"primary\"\n//                         onClick={() => { console.log(saveableCanvas.current.canvasContainer.children[1].toDataURL()) }}>\n//                         Evaluate\n//                     </Button>{' '}\n//                 </ModalFooter>\n//             </Modal>\n//         </div >\n//     );\n// }\n// export default ModalExample;\n\nvar ModalTest = /*#__PURE__*/function (_React$Component) {\n  _inherits(ModalTest, _React$Component);\n\n  var _super = _createSuper(ModalTest);\n\n  function ModalTest(props) {\n    var _this;\n\n    _classCallCheck(this, ModalTest);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      modal: true\n    };\n    var saveableCanvas = useRef();\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ModalTest, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        modal: !this.state.modal\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        size: \"lg\",\n        className: \"btn-msg\",\n        onClick: this.toggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }, this.props.buttonLabel), /*#__PURE__*/React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        className: this.props.className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ModalHeader, {\n        toggle: this.toggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      }, \"Spiral Drawing Test\"), /*#__PURE__*/React.createElement(ModalBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CanvasDraw, {\n        className: \"mx-auto sig-canvas\",\n        lazyRadius: \"0\",\n        brushRadius: \"2\",\n        brushColor: \"#222222\",\n        hideGrid: \"true\",\n        hideInterface: \"true\" // imgSrc= 'url(../../assets/img/tremor/Spiral_image.jpg)'\n        // saveData={localStorage.getItem(\"savedDrawing\")}\n        ,\n        ref: saveableCanvas,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(ModalFooter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"secondary\",\n        onClick: function onClick() {\n          saveableCanvas.current.clear();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }\n      }, \"Clear\"), /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        onClick: function onClick() {\n          console.log(saveableCanvas.current.canvasContainer.children[1].toDataURL());\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }\n      }, \"Evaluate\"), ' ')));\n    }\n  }]);\n\n  return ModalTest;\n}(React.Component);\n\nexport default ModalTest;","map":{"version":3,"sources":["/Users/geru/Desktop/argon-dashboard-react-master/src/components/dash/modal.js"],"names":["React","useState","createRef","useRef","Button","Modal","ModalHeader","ModalBody","ModalFooter","CanvasDraw","spiral","ModalTest","props","state","modal","saveableCanvas","toggle","bind","setState","buttonLabel","className","current","clear","console","log","canvasContainer","children","toDataURL","Component"],"mappings":"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","sourcesContent":["import React, { useState, createRef, useRef } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n// import Canvas from '../dash/canvas'\nimport CanvasDraw from 'react-canvas-draw'\nimport spiral from '../../assets/img/tremor/Spiral_image.jpg'\n\n// const ModalExample = (props) => {\n\n//     const {\n//         buttonLabel,\n//         className\n//     } = props;\n\n//     const saveableCanvas = useRef();\n\n\n//     const [modal, setModal] = useState(false);\n\n//     const toggle = () => setModal(!modal)\n\n//     return (\n//         <div>\n//             <Button color=\"primary\" size='lg' className='btn-msg' onClick={toggle}>{buttonLabel}</Button>\n//             <Modal isOpen={modal} toggle={toggle} className={className}>\n//                 <ModalHeader toggle={toggle}>Spiral Drawing Test</ModalHeader>\n//                 <ModalBody>\n\n//                     <CanvasDraw\n//                         className='mx-auto sig-canvas'\n//                         lazyRadius='0'\n//                         brushRadius='2'\n//                         brushColor=\"#222222\"\n//                         hideGrid='true'\n//                         hideInterface='true'\n//                         // imgSrc= 'url(../../assets/img/tremor/Spiral_image.jpg)'\n//                         // saveData={localStorage.getItem(\"savedDrawing\")}\n//                         ref={saveableCanvas}\n//                     />\n\n//                 </ModalBody>\n//                 <ModalFooter>\n//                     <Button\n//                         color=\"secondary\"\n//                         onClick={() => { saveableCanvas.current.clear() }}>Clear</Button>\n//                     <Button\n//                         color=\"primary\"\n//                         onClick={() => { console.log(saveableCanvas.current.canvasContainer.children[1].toDataURL()) }}>\n//                         Evaluate\n//                     </Button>{' '}\n//                 </ModalFooter>\n//             </Modal>\n//         </div >\n//     );\n// }\n\n// export default ModalExample;\n\n\nclass ModalTest extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal: true\n        };\n        let saveableCanvas = useRef();\n        this.toggle = this.toggle.bind(this);\n    }\n\n    toggle() {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    render() {\n\n\n        return (\n            <div>\n                <Button color=\"primary\" size='lg' className='btn-msg' onClick={this.toggle}>{this.props.buttonLabel}</Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle}>Spiral Drawing Test</ModalHeader>\n                    <ModalBody>\n\n                        <CanvasDraw\n                            className='mx-auto sig-canvas'\n                            lazyRadius='0'\n                            brushRadius='2'\n                            brushColor=\"#222222\"\n                            hideGrid='true'\n                            hideInterface='true'\n                            // imgSrc= 'url(../../assets/img/tremor/Spiral_image.jpg)'\n                            // saveData={localStorage.getItem(\"savedDrawing\")}\n                            ref={saveableCanvas}\n                        />\n\n                    </ModalBody>\n                    <ModalFooter>\n                    <Button\n                        color=\"secondary\"\n                        onClick={() => { saveableCanvas.current.clear() }}>Clear</Button>\n                    <Button\n                        color=\"primary\"\n                        onClick={() => { console.log(saveableCanvas.current.canvasContainer.children[1].toDataURL()) }}>\n                        Evaluate\n                    </Button>{' '}\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default ModalTest;\n"]},"metadata":{},"sourceType":"module"}