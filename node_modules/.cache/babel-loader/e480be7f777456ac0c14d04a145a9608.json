{"ast":null,"code":"import _classCallCheck from \"/Users/geru/Desktop/argon-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/geru/Desktop/argon-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/geru/Desktop/argon-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/geru/Desktop/argon-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/geru/Desktop/argon-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/geru/Desktop/argon-dashboard-react-master/src/components/dash/modal.js\";\nimport React, { useState, createRef, useRef } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'; // import Canvas from '../dash/canvas'\n\nimport CanvasDraw from 'react-canvas-draw';\nimport spiral from '../../assets/img/tremor/Spiral_image.jpg';\n\nvar ModalTest = /*#__PURE__*/function (_React$Component) {\n  _inherits(ModalTest, _React$Component);\n\n  var _super = _createSuper(ModalTest);\n\n  function ModalTest(props) {\n    var _this;\n\n    _classCallCheck(this, ModalTest);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      modal: true\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ModalTest, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        modal: !this.state.modal\n      });\n    }\n  }, {\n    key: \"makeblob\",\n    value: function makeblob(dataURL) {\n      var BASE64_MARKER = ';base64,';\n\n      if (dataURL.indexOf(BASE64_MARKER) == -1) {\n        var parts = dataURL.split(',');\n        var contentType = parts[0].split(':')[1];\n        var raw = decodeURIComponent(parts[1]);\n        return new Blob([raw], {\n          type: contentType\n        });\n      }\n\n      var parts = dataURL.split(BASE64_MARKER);\n      var contentType = parts[0].split(':')[1];\n      var raw = window.atob(parts[1]);\n      var rawLength = raw.length;\n      var uInt8Array = new Uint8Array(rawLength);\n\n      for (var i = 0; i < rawLength; ++i) {\n        uInt8Array[i] = raw.charCodeAt(i);\n      }\n\n      return new Blob([uInt8Array], {\n        type: contentType\n      });\n    }\n  }, {\n    key: \"pingPlatform\",\n    value: function pingPlatform(img) {\n      var url = \"https://westus2.api.cognitive.microsoft.com/customvision/v3.0/Prediction/6fede207-de99-4fbe-8f04-44a2154495ad/classify/iterations/Iteration8/image\";\n      var imgBlob = this.makeblob(img); // const req = new Request()\n\n      fetch(url, {\n        headers: {\n          \"Prediction-Key\": \"78a3f4d1ae95492680685c14da50480d\",\n          \"Content-Type\": \"application/octet-stream\",\n          \"Prediction-key\": \"78a3f4d1ae95492680685c14da50480d\"\n        },\n        method: 'POST',\n        // processData: false,\n        body: imgBlob\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        // populateResult(data, img);\n        console.log(data);\n      }).catch(function (error) {\n        console.log('err');\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // let saveableCanvas = useRef();\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        size: \"lg\",\n        className: \"btn-msg\",\n        onClick: this.toggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }, this.props.buttonLabel), /*#__PURE__*/React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        className: this.props.className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ModalHeader, {\n        toggle: this.toggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }\n      }, \"Spiral Drawing Test\"), /*#__PURE__*/React.createElement(ModalBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CanvasDraw, {\n        className: \"mx-auto sig-canvas\",\n        lazyRadius: \"0\",\n        brushRadius: \"2\",\n        brushColor: \"#222222\",\n        hideGrid: \"true\",\n        hideInterface: \"true\" // imgSrc= 'url(../../assets/img/tremor/Spiral_image.jpg)'\n        // saveData={localStorage.getItem(\"savedDrawing\")}\n        // ref={saveableCanvas}\n        ,\n        ref: function ref(CanvasReact) {\n          return _this2.saveableCanvas = CanvasReact;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(ModalFooter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"secondary\",\n        onClick: function onClick() {\n          _this2.saveableCanvas.clear();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }\n      }, \"Clear\"), ' ', /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        onClick: function onClick() {\n          _this2.pingPlatform(_this2.saveableCanvas.canvasContainer.children[1].toDataURL());\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }\n      }, \"Evaluate\"))));\n    }\n  }]);\n\n  return ModalTest;\n}(React.Component);\n\nexport default ModalTest;","map":{"version":3,"sources":["/Users/geru/Desktop/argon-dashboard-react-master/src/components/dash/modal.js"],"names":["React","useState","createRef","useRef","Button","Modal","ModalHeader","ModalBody","ModalFooter","CanvasDraw","spiral","ModalTest","props","state","modal","toggle","bind","setState","dataURL","BASE64_MARKER","indexOf","parts","split","contentType","raw","decodeURIComponent","Blob","type","window","atob","rawLength","length","uInt8Array","Uint8Array","i","charCodeAt","img","url","imgBlob","makeblob","fetch","headers","method","body","then","response","json","data","console","log","catch","error","buttonLabel","className","CanvasReact","saveableCanvas","clear","pingPlatform","canvasContainer","children","toDataURL","Component"],"mappings":"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","sourcesContent":["import React, { useState, createRef, useRef } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n// import Canvas from '../dash/canvas'\nimport CanvasDraw from 'react-canvas-draw'\nimport spiral from '../../assets/img/tremor/Spiral_image.jpg'\n\n\nclass ModalTest extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal: true\n        };\n        this.toggle = this.toggle.bind(this);\n    }\n\n    toggle() {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    makeblob(dataURL) {\n        var BASE64_MARKER = ';base64,';\n        if (dataURL.indexOf(BASE64_MARKER) == -1) {\n            var parts = dataURL.split(',');\n            var contentType = parts[0].split(':')[1];\n            var raw = decodeURIComponent(parts[1]);\n            return new Blob([raw], { type: contentType });\n        }\n        var parts = dataURL.split(BASE64_MARKER);\n        var contentType = parts[0].split(':')[1];\n        var raw = window.atob(parts[1]);\n        var rawLength = raw.length;\n\n        var uInt8Array = new Uint8Array(rawLength);\n\n        for (var i = 0; i < rawLength; ++i) {\n            uInt8Array[i] = raw.charCodeAt(i);\n        }\n\n        return new Blob([uInt8Array], { type: contentType });\n    };\n\n    pingPlatform(img) {\n        let url = \"https://westus2.api.cognitive.microsoft.com/customvision/v3.0/Prediction/6fede207-de99-4fbe-8f04-44a2154495ad/classify/iterations/Iteration8/image\";\n        let imgBlob = this.makeblob(img);\n        // const req = new Request()\n        fetch(url, {\n            headers: {\n                \"Prediction-Key\": \"78a3f4d1ae95492680685c14da50480d\",\n                \"Content-Type\": \"application/octet-stream\",\n                \"Prediction-key\": \"78a3f4d1ae95492680685c14da50480d\"\n            },\n            method: 'POST',\n            // processData: false,\n            body: imgBlob\n        })\n            .then(function (response) {\n                return response.json();\n            })\n            .then(function (data) {\n                // populateResult(data, img);\n                console.log(data);\n            })\n            .catch(function (error) {\n                console.log('err');\n            });\n    }\n\n    render() {\n\n        // let saveableCanvas = useRef();\n        return (\n            <div>\n                <Button color=\"primary\" size='lg' className='btn-msg' onClick={this.toggle}>{this.props.buttonLabel}</Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle}>Spiral Drawing Test</ModalHeader>\n                    <ModalBody>\n\n                        <CanvasDraw\n                            className='mx-auto sig-canvas'\n                            lazyRadius='0'\n                            brushRadius='2'\n                            brushColor=\"#222222\"\n                            hideGrid='true'\n                            hideInterface='true'\n                            // imgSrc= 'url(../../assets/img/tremor/Spiral_image.jpg)'\n                            // saveData={localStorage.getItem(\"savedDrawing\")}\n                            // ref={saveableCanvas}\n                            ref={(CanvasReact) => this.saveableCanvas = CanvasReact}\n                        />\n\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button\n                            color=\"secondary\"\n                            onClick={() => { this.saveableCanvas.clear() }}\n                        >Clear</Button>{' '}\n                        <Button\n                            color=\"primary\"\n                            onClick={() => { this.pingPlatform(this.saveableCanvas.canvasContainer.children[1].toDataURL()) }}\n                        >\n                            Evaluate\n                    </Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default ModalTest;\n"]},"metadata":{},"sourceType":"module"}