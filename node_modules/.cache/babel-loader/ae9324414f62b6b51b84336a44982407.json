{"ast":null,"code":"import _slicedToArray from \"/Users/geru/Desktop/argon-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/geru/Desktop/argon-dashboard-react-master/src/components/dash/modal.js\";\n\nimport React, { useState, useRef } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'; // import Canvas from '../dash/canvas'\n\nimport CanvasDraw from 'react-canvas-draw';\n\nvar ModalExample = function ModalExample(props) {\n  var buttonLabel = props.buttonLabel,\n      className = props.className;\n  var ref = useRef();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modal = _useState2[0],\n      setModal = _useState2[1];\n\n  var toggle = function toggle() {\n    return setModal(!modal);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    size: \"lg\",\n    className: \"btn-msg\",\n    onClick: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, buttonLabel), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, \"Spiral Drawing Test\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CanvasDraw, {\n    disabled: true,\n    hideGrid: true,\n    ref: function ref(canvasDraw) {\n      return _this.saveableCanvas = canvasDraw;\n    },\n    saveData: localStorage.getItem(\"savedDrawing\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"Save\"), ' ', /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, \"Cancel\"))));\n};\n\nexport default ModalExample;","map":{"version":3,"sources":["/Users/geru/Desktop/argon-dashboard-react-master/src/components/dash/modal.js"],"names":["React","useState","useRef","Button","Modal","ModalHeader","ModalBody","ModalFooter","CanvasDraw","ModalExample","props","buttonLabel","className","ref","modal","setModal","toggle","canvasDraw","saveableCanvas","localStorage","getItem"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,WAAhD,QAAmE,YAAnE,C,CACA;;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA,MAExBC,WAFwB,GAIxBD,KAJwB,CAExBC,WAFwB;AAAA,MAGxBC,SAHwB,GAIxBF,KAJwB,CAGxBE,SAHwB;AAM5B,MAAMC,GAAG,GAAGX,MAAM,EAAlB;;AAN4B,kBASFD,QAAQ,CAAC,KAAD,CATN;AAAA;AAAA,MASrBa,KATqB;AAAA,MASdC,QATc;;AAW5B,MAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,WAAMD,QAAQ,CAAC,CAACD,KAAF,CAAd;AAAA,GAAf;;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,IAAI,EAAC,IAA7B;AAAkC,IAAA,SAAS,EAAC,SAA5C;AAAsD,IAAA,OAAO,EAAEE,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwEL,WAAxE,CADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEG,KAAf;AAAsB,IAAA,MAAM,EAAEE,MAA9B;AAAsC,IAAA,SAAS,EAAEJ,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEI,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAYI,oBAAC,UAAD;AACI,IAAA,QAAQ,MADZ;AAEI,IAAA,QAAQ,MAFZ;AAGI,IAAA,GAAG,EAAG,aAAAC,UAAU;AAAA,aAAK,KAAI,CAACC,cAAL,GAAsBD,UAA3B;AAAA,KAHpB;AAII,IAAA,QAAQ,EAAEE,YAAY,CAACC,OAAb,CAAqB,cAArB,CAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CAFJ,eAqBI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAC,SADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAImB,GAJnB,eAKI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAA0B,IAAA,OAAO,EAAEJ,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,CArBJ,CAFJ,CADJ;AAkCH,CA/CD;;AAiDA,eAAeP,YAAf","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n// import Canvas from '../dash/canvas'\nimport CanvasDraw from 'react-canvas-draw'\n\nconst ModalExample = (props) => {\n    const {\n        buttonLabel,\n        className\n    } = props;\n\n    const ref = useRef();\n\n\n    const [modal, setModal] = useState(false);\n\n    const toggle = () => setModal(!modal);\n\n    return (\n        <div>\n            <Button color=\"primary\" size='lg' className='btn-msg' onClick={toggle}>{buttonLabel}</Button>\n            <Modal isOpen={modal} toggle={toggle} className={className}>\n                <ModalHeader toggle={toggle}>Spiral Drawing Test</ModalHeader>\n                <ModalBody>\n\n                    {/* <canvas id=\"sig-canvas\" width=\"400\" height=\"400\">Browser not compatibile.</canvas> */}\n                    {/* <CanvasDraw \n                        className='mx-auto sig-canvas'\n                        lazyRadius='0'\n                        brushRadius='2'\n                        brushColor=\"#222222\"\n                        hideGrid='true'\n\n                    /> */}\n\n                    <CanvasDraw\n                        disabled\n                        hideGrid\n                        ref= {canvasDraw => (this.saveableCanvas = canvasDraw)}\n                        saveData={localStorage.getItem(\"savedDrawing\")}\n                    />\n                </ModalBody>\n                <ModalFooter>\n\n                    <Button\n                        color=\"primary\"\n                    >Save</Button>{' '}\n                    <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n                </ModalFooter>\n            </Modal>\n        </div >\n    );\n}\n\nexport default ModalExample;"]},"metadata":{},"sourceType":"module"}