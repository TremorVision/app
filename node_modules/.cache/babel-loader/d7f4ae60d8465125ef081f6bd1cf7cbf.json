{"ast":null,"code":"import _slicedToArray from \"/Users/geru/Desktop/argon-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/geru/Desktop/argon-dashboard-react-master/src/components/dash/modal.js\";\n\nimport React, { useState, createRef, useRef } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'; // import Canvas from '../dash/canvas'\n\nimport CanvasDraw from 'react-canvas-draw';\n\nvar ModalExample = function ModalExample(props) {\n  var buttonLabel = props.buttonLabel,\n      className = props.className;\n  var saveableCanvas = useRef();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modal = _useState2[0],\n      setModal = _useState2[1];\n\n  var toggle = function toggle() {\n    return setModal(!modal);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    size: \"lg\",\n    className: \"btn-msg\",\n    onClick: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, buttonLabel), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, \"Spiral Drawing Test\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CanvasDraw, {\n    className: \"mx-auto sig-canvas\",\n    lazyRadius: \"0\",\n    brushRadius: \"2\",\n    brushColor: \"#222222\",\n    hideGrid: \"true\",\n    hideInterface: \"true\",\n    imgSrc: \"../../\" // ref={(elem) => (console.log(elem))}\n    // saveData={localStorage.getItem(\"savedDrawing\")}\n    ,\n    ref: saveableCanvas,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: function onClick() {\n      saveableCanvas.current.clear();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"Clear\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: function onClick() {\n      console.log(saveableCanvas.current.canvasContainer.children[1].toDataURL());\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, \"Evaluate\"), ' ')));\n};\n\nexport default ModalExample;","map":{"version":3,"sources":["/Users/geru/Desktop/argon-dashboard-react-master/src/components/dash/modal.js"],"names":["React","useState","createRef","useRef","Button","Modal","ModalHeader","ModalBody","ModalFooter","CanvasDraw","ModalExample","props","buttonLabel","className","saveableCanvas","modal","setModal","toggle","current","clear","console","log","canvasContainer","children","toDataURL"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,WAAhD,QAAmE,YAAnE,C,CACA;;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA,MAGxBC,WAHwB,GAKxBD,KALwB,CAGxBC,WAHwB;AAAA,MAIxBC,SAJwB,GAKxBF,KALwB,CAIxBE,SAJwB;AAO5B,MAAMC,cAAc,GAAGX,MAAM,EAA7B;;AAP4B,kBAUFF,QAAQ,CAAC,KAAD,CAVN;AAAA;AAAA,MAUrBc,KAVqB;AAAA,MAUdC,QAVc;;AAY5B,MAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,WAAMD,QAAQ,CAAC,CAACD,KAAF,CAAd;AAAA,GAAf;;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,IAAI,EAAC,IAA7B;AAAkC,IAAA,SAAS,EAAC,SAA5C;AAAsD,IAAA,OAAO,EAAEE,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwEL,WAAxE,CADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEG,KAAf;AAAsB,IAAA,MAAM,EAAEE,MAA9B;AAAsC,IAAA,SAAS,EAAEJ,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEI,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAYI,oBAAC,UAAD;AACI,IAAA,SAAS,EAAC,oBADd;AAEI,IAAA,UAAU,EAAC,GAFf;AAGI,IAAA,WAAW,EAAC,GAHhB;AAII,IAAA,UAAU,EAAC,SAJf;AAKI,IAAA,QAAQ,EAAC,MALb;AAMI,IAAA,aAAa,EAAC,MANlB;AAOI,IAAA,MAAM,EAAC,QAPX,CASI;AACA;AAVJ;AAYI,IAAA,GAAG,EAAEH,cAZT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CAFJ,eA8BI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAC,WADV;AAEI,IAAA,OAAO,EAAE,mBAAM;AAACA,MAAAA,cAAc,CAACI,OAAf,CAAuBC,KAAvB;AAA+B,KAFnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAII,oBAAC,MAAD;AACI,IAAA,KAAK,EAAC,SADV;AAEI,IAAA,OAAO,EAAE,mBAAM;AAAEC,MAAAA,OAAO,CAACC,GAAR,CAAYP,cAAc,CAACI,OAAf,CAAuBI,eAAvB,CAAuCC,QAAvC,CAAgD,CAAhD,EAAmDC,SAAnD,EAAZ;AAA6E,KAFlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,EAQc,GARd,CA9BJ,CAFJ,CADJ;AA8CH,CA5DD;;AA8DA,eAAed,YAAf","sourcesContent":["import React, { useState, createRef, useRef } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n// import Canvas from '../dash/canvas'\nimport CanvasDraw from 'react-canvas-draw'\n\nconst ModalExample = (props) => {\n\n    const {\n        buttonLabel,\n        className\n    } = props;\n\n    const saveableCanvas = useRef();\n\n\n    const [modal, setModal] = useState(false);\n\n    const toggle = () => setModal(!modal);\n\n    return (\n        <div>\n            <Button color=\"primary\" size='lg' className='btn-msg' onClick={toggle}>{buttonLabel}</Button>\n            <Modal isOpen={modal} toggle={toggle} className={className}>\n                <ModalHeader toggle={toggle}>Spiral Drawing Test</ModalHeader>\n                <ModalBody>\n\n                    {/* <canvas id=\"sig-canvas\" width=\"400\" height=\"400\">Browser not compatibile.</canvas> */}\n                    {/* <CanvasDraw \n                        className='mx-auto sig-canvas'\n                        lazyRadius='0'\n                        brushRadius='2'\n                        brushColor=\"#222222\"\n                        hideGrid='true'\n\n                    /> */}\n\n                    <CanvasDraw\n                        className='mx-auto sig-canvas'\n                        lazyRadius='0'\n                        brushRadius='2'\n                        brushColor=\"#222222\"\n                        hideGrid='true'\n                        hideInterface='true'\n                        imgSrc='../../'\n\n                        // ref={(elem) => (console.log(elem))}\n                        // saveData={localStorage.getItem(\"savedDrawing\")}\n\n                        ref={saveableCanvas}\n\n                    />\n                </ModalBody>\n                <ModalFooter>\n                    <Button \n                        color=\"secondary\" \n                        onClick={() => {saveableCanvas.current.clear()}}>Clear</Button>\n                    <Button\n                        color=\"primary\"\n                        onClick={() => { console.log(saveableCanvas.current.canvasContainer.children[1].toDataURL()) }}>\n                        Evaluate\n                    </Button>{' '}\n                </ModalFooter>\n            </Modal>\n        </div >\n    );\n}\n\nexport default ModalExample;"]},"metadata":{},"sourceType":"module"}